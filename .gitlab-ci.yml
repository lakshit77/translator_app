variables:
  APP_VERSION: $CI_PIPELINE_IID
  IMAGE_NAME: techsunami/translator_app
  # IMAGE_NAME: $CI_REGISTRY_IMAGE
  # IMAGE_TAG: $CI_PIPELINE_IID
  IMAGE_TAG: python-app-$CI_PIPELINE_IID

stages:
  - test
  - build
  - deploy

.run_tests:
  stage: test
  image: python:3.10.13-slim
  before_script:
    # - apt-get update && apt-get install make
    - pip install -r requirements.txt
  script:
    - python manage.py test


build_image:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  # variables:
  #   DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $REGISTRY_NAME -p $REGISTRY_PASS
    # - echo $CI_REGISTRY_PASSWORD
    # - echo $CI_REGISTRY_USER
    # - echo $CI_REGISTRY
    # - echo $CI_REGISTRY_IMAGE
    # - echo $CI_DEPLOY_PASSWORD | docker login -u $CI_DEPLOY_USER $CI_REGISTRY --password-stdin
    # - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - docker build -t $IMAGE_NAME -t $IMAGE_NAME:$IMAGE_TAG .
    - docker image ls
    - docker push --all-tags $IMAGE_NAME

# post_test:
#   stage: test
deploy:
  stage: deploy
  before_script:
    - chmod 400 $SSH_KEY
  script:
    - echo $IMAGE_NAME
    - echo $IMAGE_TAG
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY ubuntu@3.108.250.241 "
        sudo docker login -u $REGISTRY_NAME -p $REGISTRY_PASS &&
        sudo docker ps -aq | sudo xargs -r docker stop | sudo xargs -r docker rm &&
        sudo docker run -d -p 8000:8000 $IMAGE_NAME:$IMAGE_TAG"

